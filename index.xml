<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Welcome</title>
    <link>https://brian-heumann.github.io/</link>
    <description>Recent content on Welcome</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-de</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 31 Dec 2020 19:05:43 +0100</lastBuildDate><atom:link href="https://brian-heumann.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TDD &amp; Clean Architecture</title>
      <link>https://brian-heumann.github.io/posts/tdd-clean-architecture/</link>
      <pubDate>Thu, 31 Dec 2020 19:05:43 +0100</pubDate>
      
      <guid>https://brian-heumann.github.io/posts/tdd-clean-architecture/</guid>
      <description>Ich stieß über den Kurs von Matt Rešetár (Reso Coder Labs), welcher die Themen Test Driven Development, Clean Architecture und Flutter behandelt &amp;ndash; alles Themen und Inhalte, die ich für wichtig und richtig finde, und für meine IOT Projekte anwende.
Übersicht Anhand einer Referenzarchitektur nach den Prinzipien von Clean Architecture führt Matt durch eine Serie von Videos und Artikeln durch eine konkrete Implementierung einer Flutter App. Mit dieser App können die Benutzer Informationen zu bestimmten Zahlen von einer REST API im Web einholen und anzeigen lassen.</description>
    </item>
    
    <item>
      <title>Testing Dart Exceptions &amp; Errors</title>
      <link>https://brian-heumann.github.io/posts/testing-dart-exceptions/</link>
      <pubDate>Sat, 12 Dec 2020 18:10:12 +0100</pubDate>
      
      <guid>https://brian-heumann.github.io/posts/testing-dart-exceptions/</guid>
      <description>Beim Unit Testing sollte man auch die (bekannten) Ausnahmesituationen testen, z.B. wenn Parameter einer Methode in einem Wertebereich liegen müssen, der Aufrufer aber Werte ausserhalb desselben übergeben kann.
Beispiel mit Dart In Dart habe ich ein Modell namens WeeklyInterval entworfen, das eine Map für die Wochentage und ihren Status (true/false) enthält. Mit der Methode set(int day, bool value) kann der Aufrufer bestimmen, ob der Wochentag wiederholt werden soll oder nicht.</description>
    </item>
    
    <item>
      <title>Cronjobs und Container</title>
      <link>https://brian-heumann.github.io/posts/cronjobs-and-containers/</link>
      <pubDate>Fri, 20 Nov 2020 17:47:53 +0100</pubDate>
      
      <guid>https://brian-heumann.github.io/posts/cronjobs-and-containers/</guid>
      <description>Für zeitgesteuerte Aufgaben ist der Cron Daemon auf dem Raspberry Pi immer eine gute Wahl. So möchte ich, das meine Raspberry Pis regelmässig einen Health Report an einen zentralen Server melden. Damit erhalte ich an einer Stelle die Einsicht, wie es meinen Geräten eigentlich so geht. Für diesen Bericht schreibe ich ein Python Script, das den Zustand von Speicher und Disk Space ausliest und diese Daten per HTTP POST Request alle 10 Minuten versendet.</description>
    </item>
    
    <item>
      <title>Kontakt</title>
      <link>https://brian-heumann.github.io/contact/</link>
      <pubDate>Tue, 17 Nov 2020 22:35:56 +0100</pubDate>
      
      <guid>https://brian-heumann.github.io/contact/</guid>
      <description>Email brian.heumann@thinkregion.com
Telephon +49 (0) 176 5679 2929
LinkedIn https://www.linkedin.com/in/heumann/</description>
    </item>
    
    <item>
      <title>Impressum</title>
      <link>https://brian-heumann.github.io/impressum/</link>
      <pubDate>Tue, 17 Nov 2020 21:16:52 +0100</pubDate>
      
      <guid>https://brian-heumann.github.io/impressum/</guid>
      <description>Angaben gemäß § 5 TMG
Brian HeumannRoßbergstr. 21D-71083 Herrenberg Vertreten durch:
Brian Heumann Kontakt:
Telefon: +49 176 5679 2929 E-Mail: brian.heumann@thinkregion.com Verantwortlich für den Inhalt nach § 55 Abs. 2 RStV:
Brian HeumannRoßbergstr. 21D-71083 Herrenberg Haftungsausschluss: Haftung für Inhalte
Die Inhalte unserer Seiten wurden mit größter Sorgfalt erstellt. Für die Richtigkeit, Vollständigkeit und Aktualität der Inhalte können wir jedoch keine Gewähr übernehmen. Als Diensteanbieter sind wir gemäß § 7 Abs.</description>
    </item>
    
    <item>
      <title>Credits</title>
      <link>https://brian-heumann.github.io/credits/</link>
      <pubDate>Tue, 17 Nov 2020 20:51:13 +0100</pubDate>
      
      <guid>https://brian-heumann.github.io/credits/</guid>
      <description>Ehre, wem Ehre gebührt:
 Powered by Hugo. Theme made with ❤ by Djordje Atlialp.  </description>
    </item>
    
    <item>
      <title>Neue Webseite</title>
      <link>https://brian-heumann.github.io/posts/new-website/</link>
      <pubDate>Tue, 17 Nov 2020 11:35:50 +0100</pubDate>
      
      <guid>https://brian-heumann.github.io/posts/new-website/</guid>
      <description>Nach langer Zeit habe ich mich enschieden, wieder eine eigene Website zu erstellen und pflegen. Im Gegensatz zu den vorherigen Versuchen, will ich dieses Mal ein minimales Design verwenden und mit nur geringen Pflegeaufwänden betreiben.
Als Tech-stack habe ich den Hugo Static Website Generator gewählt. Mit nur geringem Aufwand kann ich Themes einbinden, Inhalte erstellen und mit Github Pages verbinden.</description>
    </item>
    
    <item>
      <title>Über Brian Heumann</title>
      <link>https://brian-heumann.github.io/about/</link>
      <pubDate>Tue, 17 Nov 2020 11:34:01 +0100</pubDate>
      
      <guid>https://brian-heumann.github.io/about/</guid>
      <description>Hallo,
ich bin Brian Heumann, ein Product Owner mit ganzem Herzen! Ursprünglich habe ich Informatik an der Technischen Universität Kaiserslautern studiert und begann meine Karriere als Software Ingenieur. Weil es mir immer wichtig war mit Software die Probleme von &amp;ldquo;echten&amp;rdquo; Menschen zu lösen, habe ich mich früh auf das Frontend und User Interface konzentriert. Danach war der Schritt zum User Experience Designer der nächste logische Schritt. Dabei arbeitete ich mit Websites, Desktop Applikationen, Smartphone Apps, und auch Voice Interfaces.</description>
    </item>
    
  </channel>
</rss>
